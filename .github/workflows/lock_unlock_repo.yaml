name: Lock and Unlock Repository

on:
  issues:
    types: [opened, edited]

jobs:
  extract_Lock_level:
    runs-on: ubuntu-latest
    outputs:
      lock_level: ${{ steps.extract.outputs.lock_level }}
    steps:
      - name: Get Lock Level from Issue Body
        id: extract
        uses: actions/github-script@v6
        with:
          script: |
            const issueBody = context.payload.issue.body;
            const LockLevelMatch = issueBody.match(/### lock_level \s*\n*(.*)/);
            const LockLevel = LockLevelMatch ? LockLevelMatch[1].trim() : "lock"; // default to lock
            console.log("Lock Level: ", LockLevel);
            core.setOutput("lock_level", LockLevel.toLowerCase()); // Normalize to lowercase

  lock_unlock:
    runs-on: ubuntu-latest
    needs: extract_Lock_level
    env:
            GITHUB_TOKEN: ${{ secrets.SOURCE_TOKEN }}
    steps:
      - name: Get Issue Body
        id: issue_body
        uses: actions/github-script@v6
        with:
          script: |
            const issueBody = context.payload.issue.body;
            const sourceOrgMatch = issueBody.match(/### Source Organization\s*\n*(.*)/);
            const sourceRepoMatch = issueBody.match(/### Source Repository\s*\n*(.*)/);
            const targetOrgMatch = issueBody.match(/### Target Organization\s*\n*(.*)/);
            const targetRepoMatch = issueBody.match(/### Target Repository\s*\n*(.*)/);

            const sourceOrg = sourceOrgMatch ? sourceOrgMatch[1].trim() : "Not provided";
            const sourceRepo = sourceRepoMatch ? sourceRepoMatch[1].trim() : "Not provided";
            const targetOrg = targetOrgMatch ? targetOrgMatch[1].trim() : "Not provided";
            const targetRepo = targetRepoMatch ? targetRepoMatch[1].trim() : "Not provided";

            core.setOutput("source_org", sourceOrg);
            core.setOutput("source_repo", sourceRepo);
            core.setOutput("target_org", targetOrg);
            core.setOutput("target_repo", targetRepo);
      - name: Validate PAT tokens
        run: |
            if [[ -z "${{ secrets.SOURCE_TOKEN }}" ]]; then
              echo "Source Token is missing!"
              exit 1
            fi
        shell: bash
      
      - name: Lock Source Repository
        if: contains(github.event.issue.body.lock_level, 'lock')
        env:
            GITHUB_TOKEN: ${{ secrets.SOURCE_TOKEN }}
        run: |
            curl -X PATCH \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
                  https://api.github.com/repos/${{
                  steps.issue_body.outputs.source_org }}/${{ steps.issue_body.outputs.source_repo }} \
                  -d '{"archived": true}'
        continue-on-error: false

  
      - name: Unlock Source Repository
        if: contains(github.event.issue.body.lock_level, 'unlock')
        env:
              GITHUB_TOKEN: ${{ secrets.SOURCE_TOKEN }}
        run: |
              curl -X PATCH \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                    https://api.github.com/repos/${{
                    steps.issue_body.outputs.source_org }}/${{ steps.issue_body.outputs.source_repo }} \
                -d '{"archived": false}'
        continue-on-error: false

